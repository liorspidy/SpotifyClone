{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liors\\\\Documents\\\\Code Projects\\\\JS\\\\ReactProject\\\\spotify-clone\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Header from './Header/Header';\nimport Main from './sidebar/Main';\nimport DefaultPage from './pages/DefaultPage';\nimport { useContext, useEffect, useState } from 'react';\nimport { getTokenFromUri } from './Login';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport DataLayerContext from './store/DataLayerContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\nconst App = () => {\n  _s();\n  const ctx = useContext(DataLayerContext);\n  const [isSearchPressed, setIsSearchPressed] = useState(false);\n  const [token, setToken] = useState(null);\n\n  // useEffect(() => {\n  //   const hash = getTokenFromUri();\n  //   window.location.hash = '';\n  //   const received_token = hash.access_token;\n  //   if (received_token) {\n  //     localStorage.setItem('token', received_token);\n  //     setToken(received_token);\n  //     spotify.setAccessToken(received_token);\n  //     spotify.getMe().then((user) => ctx.loginUser(user));\n  //     spotify\n  //       .getUserPlaylists()\n  //       .then((playlists) => ctx.addToPlaylist(playlists));\n  //     ctx.setToken(received_token);\n  //   }\n  // }, [ctx]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\"(\", /*#__PURE__*/_jsxDEV(Main, {\n      onSearch: setIsSearchPressed,\n      searchTerm: isSearchPressed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), \") (\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainPages\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        searchTerm: isSearchPressed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DefaultPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), \")\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"5ls1KPQJJflGYcL2eGcLOOLoXwU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Main","DefaultPage","useContext","useEffect","useState","getTokenFromUri","SpotifyWebApi","DataLayerContext","spotify","App","ctx","isSearchPressed","setIsSearchPressed","token","setToken"],"sources":["C:/Users/liors/Documents/Code Projects/JS/ReactProject/spotify-clone/src/App.js"],"sourcesContent":["import './App.css';\nimport Header from './Header/Header';\nimport Main from './sidebar/Main';\nimport DefaultPage from './pages/DefaultPage';\nimport { useContext, useEffect, useState } from 'react';\nimport { getTokenFromUri } from './Login';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport DataLayerContext from './store/DataLayerContext';\n\nconst spotify = new SpotifyWebApi();\n\nconst App = () => {\n  const ctx = useContext(DataLayerContext);\n  const [isSearchPressed, setIsSearchPressed] = useState(false);\n  const [token, setToken] = useState(null);\n\n  // useEffect(() => {\n  //   const hash = getTokenFromUri();\n  //   window.location.hash = '';\n  //   const received_token = hash.access_token;\n  //   if (received_token) {\n  //     localStorage.setItem('token', received_token);\n  //     setToken(received_token);\n  //     spotify.setAccessToken(received_token);\n  //     spotify.getMe().then((user) => ctx.loginUser(user));\n  //     spotify\n  //       .getUserPlaylists()\n  //       .then((playlists) => ctx.addToPlaylist(playlists));\n  //     ctx.setToken(received_token);\n  //   }\n  // }, [ctx]);\n\n  return (\n    <div className=\"App\">\n      (\n      <Main onSearch={setIsSearchPressed} searchTerm={isSearchPressed} />) (\n      <div className=\"mainPages\">\n        <Header searchTerm={isSearchPressed} />\n        <DefaultPage />\n      </div>\n      )\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,iBAAiB;AACpC,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,SAASC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACvD,SAASC,eAAe,QAAQ,SAAS;AACzC,OAAOC,aAAa,MAAM,oBAAoB;AAC9C,OAAOC,gBAAgB,MAAM,0BAA0B;AAAC;AAExD,MAAMC,OAAO,GAAG,IAAIF,aAAa,EAAE;AAEnC,MAAMG,GAAG,GAAG,MAAM;EAAA;EAChB,MAAMC,GAAG,GAAGR,UAAU,CAACK,gBAAgB,CAAC;EACxC,MAAM,CAACI,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,6BAElB,QAAC,IAAI;MAAC,QAAQ,EAAEQ,kBAAmB;MAAC,UAAU,EAAED;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAG,sBACnE;MAAK,SAAS,EAAC,WAAW;MAAA,wBACxB,QAAC,MAAM;QAAC,UAAU,EAAEA;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAG,eACvC,QAAC,WAAW;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACX;EAAA;IAAA;IAAA;IAAA;EAAA,QAEF;AAEV,CAAC;AAAC,GAhCIF,GAAG;AAAA,KAAHA,GAAG;AAkCT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}