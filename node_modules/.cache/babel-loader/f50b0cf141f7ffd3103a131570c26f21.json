{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liors\\\\Documents\\\\Code Projects\\\\JS\\\\ReactProject\\\\spotify-clone\\\\src\\\\store\\\\DataLayerContext.js\",\n  _s = $RefreshSig$();\nimport { createContext } from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataLayerContext = /*#__PURE__*/createContext({\n  user: null,\n  playlists: [],\n  playing: false,\n  item: null,\n  token: null,\n  loginUser: usedata => {},\n  playingTrackToggle: () => {},\n  setToken: token => {},\n  addToPlaylist: playlist => {}\n});\nexport const DataLayer = props => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [receivedToken, setReceivedToken] = useState(null);\n  const [playlistList, setPlaylistList] = useState([]);\n  const LoginUserHandler = userdata => {\n    setUserData(userdata);\n  };\n  const IsPlayingTrackHandler = () => {\n    setIsPlaying(prevState => prevState = !prevState);\n  };\n  const receivedTokenHandler = token => {\n    setReceivedToken(token);\n  };\n  const addToPlaylistsHandler = playlist => {\n    setPlaylistList([playlist]);\n  };\n  const context = {\n    user: userData,\n    playlists: playlistList,\n    playing: isPlaying,\n    item: null,\n    token: receivedToken,\n    loginUser: LoginUserHandler,\n    playingTrackToggle: IsPlayingTrackHandler,\n    setToken: receivedTokenHandler,\n    addToPlaylist: addToPlaylistsHandler\n  };\n  return /*#__PURE__*/_jsxDEV(DataLayerContext.Provider, {\n    value: context,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(DataLayer, \"B1vI8TnzEacy34GvcXinCwSFBnk=\");\n_c = DataLayer;\nexport default DataLayerContext;\nvar _c;\n$RefreshReg$(_c, \"DataLayer\");","map":{"version":3,"names":["createContext","useState","DataLayerContext","user","playlists","playing","item","token","loginUser","usedata","playingTrackToggle","setToken","addToPlaylist","playlist","DataLayer","props","userData","setUserData","isPlaying","setIsPlaying","receivedToken","setReceivedToken","playlistList","setPlaylistList","LoginUserHandler","userdata","IsPlayingTrackHandler","prevState","receivedTokenHandler","addToPlaylistsHandler","context","children"],"sources":["C:/Users/liors/Documents/Code Projects/JS/ReactProject/spotify-clone/src/store/DataLayerContext.js"],"sourcesContent":["import { createContext } from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst DataLayerContext = createContext({\r\n  user: null,\r\n  playlists: [],\r\n  playing: false,\r\n  item: null,\r\n  token: null,\r\n  loginUser: (usedata) => {},\r\n  playingTrackToggle: () => {},\r\n  setToken: (token) => {},\r\n  addToPlaylist: (playlist) => {},\r\n});\r\n\r\nexport const DataLayer = (props) => {\r\n  const [userData, setUserData] = useState(null);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [receivedToken, setReceivedToken] = useState(null);\r\n  const [playlistList, setPlaylistList] = useState([]);\r\n  const LoginUserHandler = (userdata) => {\r\n    setUserData(userdata);\r\n  };\r\n\r\n  const IsPlayingTrackHandler = () => {\r\n    setIsPlaying((prevState) => (prevState = !prevState));\r\n  };\r\n\r\n  const receivedTokenHandler = (token) => {\r\n    setReceivedToken(token);\r\n  };\r\n\r\n  const addToPlaylistsHandler = (playlist) => {\r\n    setPlaylistList([playlist]);\r\n  };\r\n\r\n  const context = {\r\n    user: userData,\r\n    playlists: playlistList,\r\n    playing: isPlaying,\r\n    item: null,\r\n    token: receivedToken,\r\n    loginUser: LoginUserHandler,\r\n    playingTrackToggle: IsPlayingTrackHandler,\r\n    setToken: receivedTokenHandler,\r\n    addToPlaylist: addToPlaylistsHandler,\r\n  };\r\n\r\n  return (\r\n    <DataLayerContext.Provider value={context}>\r\n      {props.children}\r\n    </DataLayerContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DataLayerContext;\r\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,OAAO;AACrC,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAEjC,MAAMC,gBAAgB,gBAAGF,aAAa,CAAC;EACrCG,IAAI,EAAE,IAAI;EACVC,SAAS,EAAE,EAAE;EACbC,OAAO,EAAE,KAAK;EACdC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,IAAI;EACXC,SAAS,EAAGC,OAAO,IAAK,CAAC,CAAC;EAC1BC,kBAAkB,EAAE,MAAM,CAAC,CAAC;EAC5BC,QAAQ,EAAGJ,KAAK,IAAK,CAAC,CAAC;EACvBK,aAAa,EAAGC,QAAQ,IAAK,CAAC;AAChC,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMuB,gBAAgB,GAAIC,QAAQ,IAAK;IACrCR,WAAW,CAACQ,QAAQ,CAAC;EACvB,CAAC;EAED,MAAMC,qBAAqB,GAAG,MAAM;IAClCP,YAAY,CAAEQ,SAAS,IAAMA,SAAS,GAAG,CAACA,SAAU,CAAC;EACvD,CAAC;EAED,MAAMC,oBAAoB,GAAIrB,KAAK,IAAK;IACtCc,gBAAgB,CAACd,KAAK,CAAC;EACzB,CAAC;EAED,MAAMsB,qBAAqB,GAAIhB,QAAQ,IAAK;IAC1CU,eAAe,CAAC,CAACV,QAAQ,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMiB,OAAO,GAAG;IACd3B,IAAI,EAAEa,QAAQ;IACdZ,SAAS,EAAEkB,YAAY;IACvBjB,OAAO,EAAEa,SAAS;IAClBZ,IAAI,EAAE,IAAI;IACVC,KAAK,EAAEa,aAAa;IACpBZ,SAAS,EAAEgB,gBAAgB;IAC3Bd,kBAAkB,EAAEgB,qBAAqB;IACzCf,QAAQ,EAAEiB,oBAAoB;IAC9BhB,aAAa,EAAEiB;EACjB,CAAC;EAED,oBACE,QAAC,gBAAgB,CAAC,QAAQ;IAAC,KAAK,EAAEC,OAAQ;IAAA,UACvCf,KAAK,CAACgB;EAAQ;IAAA;IAAA;IAAA;EAAA,QACW;AAEhC,CAAC;AAAC,GAtCWjB,SAAS;AAAA,KAATA,SAAS;AAwCtB,eAAeZ,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module"}