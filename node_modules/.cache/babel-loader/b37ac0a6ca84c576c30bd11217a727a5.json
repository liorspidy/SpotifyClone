{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liors\\\\Documents\\\\Code Projects\\\\JS\\\\ReactProject\\\\spotify-clone\\\\src\\\\pages\\\\PlaylistRow.js\";\nimport React from 'react';\nimport classes from './PlaylistRow.module.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PlaylistRow(props) {\n  let yourPlaylist = [];\n  function allLetters(str) {\n    let alpha = new Set('abcdefghijklmnopqrstuvwxyz');\n    for (let c of alpha) {\n      if (str.toLowerCase().includes(c)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  if (props.type === 'artists') {\n    var _props$playlist;\n    yourPlaylist = (_props$playlist = props.playlist) === null || _props$playlist === void 0 ? void 0 : _props$playlist.map(item => {\n      const classByLang = !allLetters(item.name) ? `${classes.heb_name}` : `${classes.eng_name}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.rowItem,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.images[1].url,\n          alt: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: classByLang,\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this);\n    });\n  }\n  if (props.type === 'topTracks') {\n    var _props$playlist2;\n    yourPlaylist = (_props$playlist2 = props.playlist) === null || _props$playlist2 === void 0 ? void 0 : _props$playlist2.map(item => {\n      const classByLang = !allLetters(item.name) ? `${classes.heb_name}` : `${classes.eng_name}`;\n      const trackDuration = Math.round(item.duration_ms / 1000 / 60);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.rowItem,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.album.images[1].url,\n          alt: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.trackDetail,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classByLang,\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: classes.duration,\n            children: [trackDuration, \" Min\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this);\n    });\n  }\n  if (props.type === 'recentTracks') {\n    var _props$playlist3;\n    yourPlaylist = (_props$playlist3 = props.playlist) === null || _props$playlist3 === void 0 ? void 0 : _props$playlist3.map(item => {\n      const classByLang = !allLetters(item.track.name) ? `${classes.heb_name}` : `${classes.eng_name}`;\n      const classByLangAlbum = !allLetters(item.track.album.name) ? `${classes.heb_name_album}` : `${classes.eng_name_album}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.rowItem,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.track.album.images[1].url,\n          alt: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.trackDetail,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: classByLang,\n            children: item.track.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: classByLangAlbum,\n            children: item.track.album.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, item.track.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.rowItems,\n    children: yourPlaylist\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 10\n  }, this);\n}\n_c = PlaylistRow;\nvar _c;\n$RefreshReg$(_c, \"PlaylistRow\");","map":{"version":3,"names":["React","classes","useState","PlaylistRow","props","yourPlaylist","allLetters","str","alpha","Set","c","toLowerCase","includes","type","playlist","map","item","classByLang","name","heb_name","eng_name","rowItem","images","url","id","trackDuration","Math","round","duration_ms","album","trackDetail","duration","track","classByLangAlbum","heb_name_album","eng_name_album","rowItems"],"sources":["C:/Users/liors/Documents/Code Projects/JS/ReactProject/spotify-clone/src/pages/PlaylistRow.js"],"sourcesContent":["import React from 'react';\r\nimport classes from './PlaylistRow.module.css';\r\nimport { useState } from 'react';\r\n\r\nexport default function PlaylistRow(props) {\r\n  let yourPlaylist = [];\r\n\r\n  function allLetters(str) {\r\n    let alpha = new Set('abcdefghijklmnopqrstuvwxyz');\r\n    for (let c of alpha) {\r\n      if (str.toLowerCase().includes(c)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  if (props.type === 'artists') {\r\n    yourPlaylist = props.playlist?.map((item) => {\r\n      const classByLang = !allLetters(item.name)\r\n        ? `${classes.heb_name}`\r\n        : `${classes.eng_name}`;\r\n      return (\r\n        <div key={item.id} className={classes.rowItem}>\r\n          <img src={item.images[1].url} alt={item.name} />\r\n          <h3 className={classByLang}>{item.name}</h3>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  if (props.type === 'topTracks') {\r\n    yourPlaylist = props.playlist?.map((item) => {\r\n      const classByLang = !allLetters(item.name)\r\n        ? `${classes.heb_name}`\r\n        : `${classes.eng_name}`;\r\n\r\n      const trackDuration = Math.round(item.duration_ms / 1000 / 60);\r\n      return (\r\n        <div key={item.id} className={classes.rowItem}>\r\n          <img src={item.album.images[1].url} alt={item.name} />\r\n          <div className={classes.trackDetail}>\r\n            <div className={classByLang}>\r\n              <h3>{item.name}</h3>\r\n            </div>\r\n            <h5 className={classes.duration}>{trackDuration} Min</h5>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  if (props.type === 'recentTracks') {\r\n    yourPlaylist = props.playlist?.map((item) => {\r\n      const classByLang = !allLetters(item.track.name)\r\n        ? `${classes.heb_name}`\r\n        : `${classes.eng_name}`;\r\n\r\n      const classByLangAlbum = !allLetters(item.track.album.name)\r\n        ? `${classes.heb_name_album}`\r\n        : `${classes.eng_name_album}`;\r\n      return (\r\n        <div key={item.track.id} className={classes.rowItem}>\r\n          <img src={item.track.album.images[1].url} alt={item.name} />\r\n          <div className={classes.trackDetail}>\r\n            <h3 className={classByLang}>{item.track.name}</h3>\r\n            <h5 className={classByLangAlbum}>{item.track.album.name}</h5>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  return <div className={classes.rowItems}>{yourPlaylist}</div>;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}