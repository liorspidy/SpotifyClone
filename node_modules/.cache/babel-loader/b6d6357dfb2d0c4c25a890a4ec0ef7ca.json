{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liors\\\\Documents\\\\Code Projects\\\\JS\\\\ReactProject\\\\spotify-clone\\\\src\\\\pages\\\\Search.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport classes from './Search.module.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Category from './Category';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\nexport default function Search() {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [categoriesImages, setCategoriesImages] = useState([]);\n  useEffect(() => {\n    spotify.getCategories().then(res => {\n      setCategories(res.categories.items);\n    }).catch(error => console.log(error.message));\n  }, []);\n  useEffect(() => {\n    categories.forEach(cat => {\n      spotify.getCategoryPlaylists(cat.id).then(res => {\n        setCategoriesImages(res.playlists.items[0].images[0].url);\n      }).catch(error => console.log(error.message));\n    });\n  }, [categories]);\n  console.log(categoriesImages);\n\n  //   categories.map((element) => {\n  //     console.log({ ...element, image: categoriesImages });\n  //   });\n\n  const categoriesList = categories.map(cat => {\n    return /*#__PURE__*/_jsxDEV(Category, {\n      id: cat.id,\n      name: cat.name\n    }, cat.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  });\n\n  //   const categoriesListImages = categoriesImages.map((cat) => {\n  //     return <img src={cat} />;\n  //   });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.searchPage,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: classes.headline,\n      children: \"Browse all\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: categoriesList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"RKlivvSzojDBaHZXIieXcc1xyVI=\");\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useEffect","useState","classes","SpotifyWebApi","Category","spotify","Search","categories","setCategories","categoriesImages","setCategoriesImages","getCategories","then","res","items","catch","error","console","log","message","forEach","cat","getCategoryPlaylists","id","playlists","images","url","categoriesList","map","name","searchPage","headline"],"sources":["C:/Users/liors/Documents/Code Projects/JS/ReactProject/spotify-clone/src/pages/Search.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport classes from './Search.module.css';\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport Category from './Category';\r\n\r\nconst spotify = new SpotifyWebApi();\r\n\r\nexport default function Search() {\r\n  const [categories, setCategories] = useState([]);\r\n  const [categoriesImages, setCategoriesImages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    spotify\r\n      .getCategories()\r\n      .then((res) => {\r\n        setCategories(res.categories.items);\r\n      })\r\n      .catch((error) => console.log(error.message));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    categories.forEach((cat) => {\r\n      spotify\r\n        .getCategoryPlaylists(cat.id)\r\n        .then((res) => {\r\n          setCategoriesImages(res.playlists.items[0].images[0].url);\r\n        })\r\n        .catch((error) => console.log(error.message));\r\n    });\r\n  }, [categories]);\r\n\r\n  console.log(categoriesImages);\r\n\r\n  //   categories.map((element) => {\r\n  //     console.log({ ...element, image: categoriesImages });\r\n  //   });\r\n\r\n  const categoriesList = categories.map((cat) => {\r\n    return <Category key={cat.id} id={cat.id} name={cat.name} />;\r\n  });\r\n\r\n  //   const categoriesListImages = categoriesImages.map((cat) => {\r\n  //     return <img src={cat} />;\r\n  //   });\r\n\r\n  return (\r\n    <div className={classes.searchPage}>\r\n      <h1 className={classes.headline}>Browse all</h1>\r\n      <ul>{categoriesList}</ul>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,OAAO,MAAM,qBAAqB;AACzC,OAAOC,aAAa,MAAM,oBAAoB;AAC9C,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAElC,MAAMC,OAAO,GAAG,IAAIF,aAAa,EAAE;AAEnC,eAAe,SAASG,MAAM,GAAG;EAAA;EAC/B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5DD,SAAS,CAAC,MAAM;IACdK,OAAO,CACJM,aAAa,EAAE,CACfC,IAAI,CAAEC,GAAG,IAAK;MACbL,aAAa,CAACK,GAAG,CAACN,UAAU,CAACO,KAAK,CAAC;IACrC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC,CAAC;EACjD,CAAC,EAAE,EAAE,CAAC;EAENnB,SAAS,CAAC,MAAM;IACdO,UAAU,CAACa,OAAO,CAAEC,GAAG,IAAK;MAC1BhB,OAAO,CACJiB,oBAAoB,CAACD,GAAG,CAACE,EAAE,CAAC,CAC5BX,IAAI,CAAEC,GAAG,IAAK;QACbH,mBAAmB,CAACG,GAAG,CAACW,SAAS,CAACV,KAAK,CAAC,CAAC,CAAC,CAACW,MAAM,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC;MAC3D,CAAC,CAAC,CACDX,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC,CAAC;IACjD,CAAC,CAAC;EACJ,CAAC,EAAE,CAACZ,UAAU,CAAC,CAAC;EAEhBU,OAAO,CAACC,GAAG,CAACT,gBAAgB,CAAC;;EAE7B;EACA;EACA;;EAEA,MAAMkB,cAAc,GAAGpB,UAAU,CAACqB,GAAG,CAAEP,GAAG,IAAK;IAC7C,oBAAO,QAAC,QAAQ;MAAc,EAAE,EAAEA,GAAG,CAACE,EAAG;MAAC,IAAI,EAAEF,GAAG,CAACQ;IAAK,GAAnCR,GAAG,CAACE,EAAE;MAAA;MAAA;MAAA;IAAA,QAAgC;EAC9D,CAAC,CAAC;;EAEF;EACA;EACA;;EAEA,oBACE;IAAK,SAAS,EAAErB,OAAO,CAAC4B,UAAW;IAAA,wBACjC;MAAI,SAAS,EAAE5B,OAAO,CAAC6B,QAAS;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eAChD;MAAA,UAAKJ;IAAc;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QACrB;AAEV;AAAC,GA5CuBrB,MAAM;AAAA,KAANA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module"}